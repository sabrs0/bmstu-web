---
openapi: 3.0.1
info:
  title: Foundations
  version: '1.0'
  description: The API for the Foundations project
paths:
  "/api/v1/foundations":
    get:
      tags:
      - Foundation
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Foundation"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Foundation"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Foundation"
    post:
      security:
      - token: []
      tags:
      - Foundation
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/FoundationPost"
          text/json:
            schema:
              "$ref": "#/components/schemas/FoundationPost"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/FoundationPost"
      responses:
        '201':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/Foundation"
            application/json:
              schema:
                "$ref": "#/components/schemas/Foundation"
            text/json:
              schema:
                "$ref": "#/components/schemas/Foundation"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '409':
          description: Conflict
  "/api/v1/foundations/{id}":
    put:
      security:
      - token: []
      tags:
      - Foundation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/FoundationPost"
          text/json:
            schema:
              "$ref": "#/components/schemas/FoundationPost"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/FoundationPost"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/Foundation"
            application/json:
              schema:
                "$ref": "#/components/schemas/Foundation"
            text/json:
              schema:
                "$ref": "#/components/schemas/Foundation"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '409':
          description: Conflict
    delete:
      security:
      - token: []
      tags:
      - Foundation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/Foundation"
            application/json:
              schema:
                "$ref": "#/components/schemas/Foundation"
            text/json:
              schema:
                "$ref": "#/components/schemas/Foundation"
        '401':
          description: Unauthorized
        '404':
          description: Not Found
    get:
      tags:
      - Foundation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/Foundation"
            application/json:
              schema:
                "$ref": "#/components/schemas/Foundation"
            text/json:
              schema:
                "$ref": "#/components/schemas/Foundation"
        '404':
          description: Not Found
  "/api/v1/foundations/{id}/donate":
    post:
        security:
        - token: []
        tags:
        - Foundation
        parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FoundationDonate"
            text/json:
              schema:
                "$ref": "#/components/schemas/FoundationDonate"
            application/*+json:
              schema:
                "$ref": "#/components/schemas/FoundationDonate"
        responses:
          '200':
            description: Success
            content:
              text/plain:
                schema:
                  "$ref": "#/components/schemas/Transaction"
              application/json:
                schema:
                  "$ref": "#/components/schemas/Transaction"
              text/json:
                schema:
                  "$ref": "#/components/schemas/Transaction"
          '400':
            description: Bad Request
          '401':
            description: Unauthorized
          '404':
            description: Not Found
          '409':
            description: Conflict
  "/api/v1/foundations/{id}/foundrisings":
    get:
      tags:
      - Foundation
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Foundrising"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Foundrising"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Foundrising"
        '404':
          description: Not Found
  "/api/v1/foundrisings":
    get:
      tags:
      - Foundrising
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Foundrising"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Foundrising"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Foundrising"
    post:
      security:
      - token: []
      tags:
      - Foundrising
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/FoundrisingPost"
          text/json:
            schema:
              "$ref": "#/components/schemas/FoundrisingPost"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/FoundrisingPost"
      responses:
        '201':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/Foundrising"
            application/json:
              schema:
                "$ref": "#/components/schemas/Foundrising"
            text/json:
              schema:
                "$ref": "#/components/schemas/Foundrising"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '409':
          description: Conflict
  "/api/v1/foundrisings/{id}":
    put:
      security:
      - token: []
      tags:
      - Foundrising
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/FoundrisingPut"
          text/json:
            schema:
              "$ref": "#/components/schemas/FoundrisingPut"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/FoundrisingPut"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/Foundrising"
            application/json:
              schema:
                "$ref": "#/components/schemas/Foundrising"
            text/json:
              schema:
                "$ref": "#/components/schemas/Foundrising"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '409':
          description: Conflict
    patch:
      security:
      - token: []
      tags:
      - Foundrising
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/FoundrisingPut"
          text/json:
            schema:
              "$ref": "#/components/schemas/FoundrisingPut"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/FoundrisingPut"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/Foundrising"
            application/json:
              schema:
                "$ref": "#/components/schemas/Foundrising"
            text/json:
              schema:
                "$ref": "#/components/schemas/Foundrising"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '409':
          description: Conflict
    delete:
      security:
      - token: []
      tags:
      - Foundrising
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/Foundrising"
            application/json:
              schema:
                "$ref": "#/components/schemas/Foundrising"
            text/json:
              schema:
                "$ref": "#/components/schemas/Foundrising"
        '401':
          description: Unauthorized
        '404':
          description: Not Found
    get:
      tags:
      - Foundrising
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/Foundrising"
            application/json:
              schema:
                "$ref": "#/components/schemas/Foundrising"
            text/json:
              schema:
                "$ref": "#/components/schemas/Foundrising"
        '404':
          description: Not Found
  "/api/v1/transactions":
    get:
      security:
      - token: []
      tags:
      - Transaction
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Transaction"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Transaction"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Transaction"
        '401':
          description: Unauthorized
  "/api/v1/transactions/{id}":
    get:
      security:
      - token: []
      tags:
      - Transaction
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/Transaction"
            application/json:
              schema:
                "$ref": "#/components/schemas/Transaction"
            text/json:
              schema:
                "$ref": "#/components/schemas/Transaction"
        '401':
          description: Unauthorized
        '404':
          description: Not Found
    delete:
      security:
      - token: []
      tags:
      - Transaction
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/Transaction"
            application/json:
              schema:
                "$ref": "#/components/schemas/Transaction"
            text/json:
              schema:
                "$ref": "#/components/schemas/Transaction"
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  "/api/v1/users":
    get:
      security:
      - token: []
      tags:
      - User
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/User"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/User"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/User"
        '401':
          description: Unauthorized
    post:
      security:
      - token: []
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserPost"
          text/json:
            schema:
              "$ref": "#/components/schemas/UserPost"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/UserPost"
      responses:
        '201':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/User"
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
            text/json:
              schema:
                "$ref": "#/components/schemas/User"
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '409':
          description: Conflict
  "/api/v1/users/{id}":
    delete:
      security:
      - token: []
      tags:
      - User
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/User"
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
            text/json:
              schema:
                "$ref": "#/components/schemas/User"
        '401':
          description: Unauthorized
        '404':
          description: Not Found
    get:
      security:
      - token: []
      tags:
      - User
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/User"
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
            text/json:
              schema:
                "$ref": "#/components/schemas/User"
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  "/api/v1/users/{id}/donate":
    post:
        security:
        - token: []
        tags:
        - User
        parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        requestBody:
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserDonate"
            text/json:
              schema:
                "$ref": "#/components/schemas/UserDonate"
            application/*+json:
              schema:
                "$ref": "#/components/schemas/UserDonate"
        responses:
          '200':
            description: Success
            content:
              text/plain:
                schema:
                  "$ref": "#/components/schemas/Transaction"
              application/json:
                schema:
                  "$ref": "#/components/schemas/Transaction"
              text/json:
                schema:
                  "$ref": "#/components/schemas/Transaction"
          '400':
            description: Bad Request
          '401':
            description: Unauthorized
          '404':
            description: Not Found
          '409':
            description: Conflict
  "/api/v1/login":
    post:
      tags:
      - Login
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Login"
          text/json:
            schema:
              "$ref": "#/components/schemas/Login"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/Login"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/Token"
            application/json:
              schema:
                "$ref": "#/components/schemas/Token"
            text/json:
              schema:
                "$ref": "#/components/schemas/Token"
        '400':
          description: Bad Request
        '404':
          description: Not Found
components:
  schemas:
    Foundation:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        curFoudrisingAmount:
          type: integer
          format: int32
        ClosedFoundrisingAmount:
          type: integer
          format: int32
        Volunteer_amount:
          type: integer
          format: int32
        fund_balance:
          type: number
          format: double
        income:
          type: number
          format: double
        outcome:
          type: number
          format: double
        Country:
          type: string
          nullable: true
      additionalProperties: false
    
    
    FoundationPost:
      type: object
      properties:
        name:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        login:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
      
    FoundationDonate:
      type: object
      properties:
        foundrising_id:
          type: string
          nullable: true
        sum_of_money:
          type: integer
          format: int32
        comm:
          type: string
          nullable: true
      additionalProperties: false

        
    Foundrising:
      type: object
      properties:
        id:
          type: integer
          format: int32
        found_id:
          type: integer
          format: int32
        reqSum:
          type: integer
          format: int32
        ph_amount:
          type: integer
          format: int32
        curSum:
          type: integer
          format: int32
        description:
          type: string
          nullable: false
        creation_date:
          type: string
          nullable: false
        close_date:
          type: string
          nullable: false
      additionalProperties: false
    FoundrisingPost:
      type: object
      properties:
        found_id:
          type: integer
          format: int32
        reqSum:
          type: integer
          format: int32
        description:
          type: string
          nullable: false
        creation_date:
          type: string
          nullable: false
      additionalProperties: false
    FoundrisingPut:
      type: object
      properties:
        reqSum:
          type: integer
          format: int32
        description:
          type: string
          nullable: false
      additionalProperties: false
    User:
      type: object
      properties:
        Login:
          type: string
        Balance:
          type: number
          format: double
        CharitySum:
          type: integer
          format: int32
        ClosedFingAmount:
          type: integer
          format: int32
      additionalProperties: false
    UserPost:
      type: object
      properties:
        Login:
          type: string
        Password:
          type: string
      additionalProperties: false
    UserDonate:
      type: object
      properties:
        entity-type:
          type: integer
          format: int32
        entity-id:
          type: integer
          format: int32
        sum_of_money:
          type: integer
          format: int32
        comm:
          type: string
      additionalProperties: false
    Login:
      type: object
      properties:
        login:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
    Token:
      type: object
      properties:
        tokenVal:
          type: string
          nullable: true
      additionalProperties: false
    Transaction:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        fromId:
          type: integer
          format: int32
          nullable: true
        toId:
          type: integer
          format: int32
          nullable: true
        fromType:
          type: string
          nullable: true
        toType:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
        sum:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
  securitySchemes:
      token:
        type: apiKey
        description: Please insert JWT with Token into field
        name: Authorization
        in: header