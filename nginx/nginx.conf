user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /run/nginx.pid;


events {
    worker_connections  1024;
}

http {
    gzip_disable "msie6";
    gzip_comp_level 2;
    gzip_min_length 512;
    gzip_proxied any;
    gzip_types *;
    #echo_sleep 20;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip  off;

    include /etc/nginx/conf.d/*.conf;

    proxy_cache_path /var/cache/nginx/foundations_cache levels=1:2 keys_zone=foundations_cache:15m max_size=1G;

    upstream foundations-app-read{
        #least_conn;
        server 0.0.0.0:8081 weight=2;
        server 0.0.0.0:8082;
        server 0.0.0.0:8083;
    }

    upstream foundations-app {
	server 0.0.0.0:8081;
    }

    upstream foundations-mirror {
        server 0.0.0.0:8086;
    }


    map $request_method $backend{
        GET foundations-app-read;
        default foundations-app;
    }
    #more_set_headers 'Server: foundations';
    server{
        #health_check interval=30 fails=2;
	set $FOUNDS_PATH /home/sersab/go_projects/src/github.com/sabrs0/bmstu-web;
	set $STATIC_PATH $FOUNDS_PATH/static;
	#set $Allow_Origin Access-Control-Allow-Origin;
	#set $Allow_Headers Access-Control-Allow-Headers;
	listen 81 default_server;	
	listen 8080;
	listen 443 ssl;
	http2 on;
	ssl_certificate /etc/ssl/certs/local-nginx.crt;
	ssl_certificate_key /etc/ssl/private/local-nginx.key;
        ssl_session_cache builtin:1000 shared:SSL:10m;
	
	proxy_cache foundations_cache;
        proxy_cache_lock on;
	proxy_cache_use_stale error timeout updating;

	location / {
	    proxy_no_cache 1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	          
       	    #add_header 'Access-Control-Allow-Origin' '*';
            #add_header 'Access-Control-Allow-Headers' '*';
            #proxy_pass http://localhost:3000;

	}
	location /test {
            index index.html;
            alias $STATIC_PATH/;
        }
 	#location /metrics{
        #    proxy_no_cache 1;
        #    proxy_set_header Host $host;
        #    proxy_set_header X-Real-IP $remote_addr;
        #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #    proxy_pass http://$backend;
        #    #proxy_pass http://localhost:8081;
        #}
	location /api/v1/{
	    proxy_no_cache 1;
	    proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #proxy_set_header 'Access-Control-Allow-Origin' '*';
	    #proxy_set_header 'Access-Control-Allow-Headers' '*';

	    #add_header 'Access-Control-Allow-Origin' '*';
            #add_header 'Access-Control-Allow-Headers' '*';
	    proxy_hide_header Access-Control-Allow-Origin;
            add_header Access-Control-Allow-Origin '*';
            proxy_hide_header Access-Control-Allow-Headers;
            add_header Access-Control-Allow-Headers '*';
    	    proxy_pass http://$backend;
	    #proxy_pass http://localhost:3000;
        }
	location = /api/v1 {
	    return 302 http://localhost:40789/docs;
	}
	location /documentation {
	    return 302 https://github.com/sabrs0/bmstu-web/blob/main/README.md;
	}
	location /admin{
	    return 302 http://127.0.0.1/pgadmin4/browser/;
	}
	location = /status {
    	    stub_status;
	}
	location ~ ^/mirror1/ {
        	proxy_no_cache 1;

        	proxy_set_header Host $host;
        	proxy_set_header X-Real-IP $remote_addr;
        	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        	rewrite ^/mirror1/(.*) /$1 break;

        	proxy_pass http://foundations-mirror;
    	}

    }
    
}

